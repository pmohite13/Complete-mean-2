{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/data-filter.service.ts","webpack:///./src/app/core/data.service.ts","webpack:///./src/app/core/sorter.ts","webpack:///./src/app/core/trackby.service.ts","webpack:///./src/app/customers/customer-edit-reactive.component.html","webpack:///./src/app/customers/customer-edit-reactive.component.ts","webpack:///./src/app/customers/customer-edit.component.html","webpack:///./src/app/customers/customer-edit.component.ts","webpack:///./src/app/customers/customers-grid.component.html","webpack:///./src/app/customers/customers-grid.component.ts","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/demo/demo.component.css","webpack:///./src/app/demo/demo.component.html","webpack:///./src/app/demo/demo.component.ts","webpack:///./src/app/shared/ensureModuleLoadedOnceGuard.ts","webpack:///./src/app/shared/filter-textbox/filter-textbox.component.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/shared/pagination/pagination.component.css","webpack:///./src/app/shared/pagination/pagination.component.html","webpack:///./src/app/shared/pagination/pagination.component.ts","webpack:///./src/app/shared/pipes/capitalize.pipe.ts","webpack:///./src/app/shared/pipes/trim.pipe.ts","webpack:///./src/app/shared/property-resolver.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/validation.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./shell/shell.module\": [\n\t\t\"./src/app/shell/shell.module.ts\",\n\t\t\"shell-shell-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { CustomersGridComponent } from './customers/customers-grid.component';\r\nimport { CustomerEditComponent } from './customers/customer-edit.component';\r\nimport { CustomerEditReactiveComponent } from './customers/customer-edit-reactive.component';\r\nimport { IRouting } from './shared/interfaces';\r\nimport { DemoComponent } from './demo/demo.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', loadChildren:'./shell/shell.module#ShellModule'},\r\n  // { path: '', pathMatch: 'full', redirectTo: '/customers' },\r\n  { path: 'demo', component: DemoComponent },\r\n // { path: 'customers', component: CustomersComponent },\r\n // { path: 'customers/:id', component: CustomerEditComponent },\r\n  //{ path: 'customers/:id', component: CustomerEditReactiveComponent },\r\n // { path: '**', redirectTo: '/customers' } //catch any unfound routes and redirect to home page\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n  static components = [\r\n    CustomersComponent, \r\n    CustomerEditComponent, \r\n    CustomerEditReactiveComponent, \r\n    CustomersGridComponent\r\n  ];\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({ \r\n  selector: 'app-root',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { DemoComponent } from './demo/demo.component';\r\nimport { MaterialModule } from './shared/material/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,  \r\n    MaterialModule,\r\n    AppRoutingModule,\r\n    CoreModule,     //Singleton objects\r\n    SharedModule  //Shared (multi-instance) objects\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    AppRoutingModule.components,\r\n    DemoComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\n\r\n//Using the new HttpClientModule now. If you're still on < Angular 4.3 see the \r\n//core.module.ts.httpmodule file instead (simply rename it to the name \r\n//of this file to use it instead)\r\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\r\n\r\nimport { DataService } from './data.service';\r\nimport { DataFilterService } from './data-filter.service';\r\nimport { Sorter } from './sorter';\r\nimport { TrackByService } from './trackby.service';\r\nimport { EnsureModuleLoadedOnceGuard } from '../shared/ensureModuleLoadedOnceGuard';\r\n\r\n@NgModule({\r\n  imports: [ \r\n    //Can use with Angular 4.3+ to \r\n    HttpClientModule, \r\n    //Can use to override default names for XSRF cookie and header\r\n    // HttpClientXsrfModule.withOptions({\r\n    //   cookieName: 'My-XSRF-TOKEN',\r\n    //   headerName: 'My-X-XSRF-TOKEN',\r\n    // })\r\n  ],\r\n  providers: [ DataService, DataFilterService, Sorter, TrackByService] \r\n})\r\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {    //Ensure that CoreModule is only loaded into AppModule\r\n\r\n  //Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\r\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\r\n    super(parentModule);\r\n  }  \r\n\r\n}\r\n\r\n//Example of a custom XSRF class\r\n//export class MyCookieXSRFStrategy implements XSRFStrategy {\r\n//    constructor(\r\n//        private _cookieName: string = 'XSRF-TOKEN', private _headerName: string = 'X-XSRF-TOKEN') { }\r\n\r\n//    private getCookie(name: string) {\r\n//        let ca: Array<string> = document.cookie.split(';');\r\n//        let caLen: number = ca.length;\r\n//        let cookieName = name + \"=\";\r\n//        let c: string;\r\n\r\n//        for (let i: number = 0; i < caLen; i += 1) {\r\n//            c = ca[i].replace(/^\\s\\+/g, \"\");\r\n//            if (c.indexOf(cookieName) == 0) {\r\n//                return c.substring(cookieName.length, c.length);\r\n//            }\r\n//        }\r\n//        return \"\";\r\n//    }\r\n\r\n//    configureRequest(req: Request) {\r\n//        let xsrfToken = this.getCookie(this._cookieName);\r\n//        alert(xsrfToken);\r\n//        if (xsrfToken) {\r\n//            req.headers.set(this._headerName, xsrfToken);\r\n//        }\r\n//    }\r\n//}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { propertyResolver } from '../shared/property-resolver';\r\n\r\n@Injectable()\r\nexport class DataFilterService {\r\n    \r\n    filter(datasource: any[], filterProperties: string[], filterData: string) {\r\n        if (datasource && filterProperties && filterData) {\r\n            filterData = filterData.toUpperCase();\r\n            const filtered = datasource.filter(item => {\r\n                let match = false;\r\n                for (const prop of filterProperties) {\r\n                    let propVal: any = '';\r\n                    \r\n                    //Account for nested properties like 'state.name'\r\n                    if (prop.indexOf('.') > -1) {\r\n                        propVal = propertyResolver.resolve(prop, item);\r\n                        if (propVal) {\r\n                            propVal = propVal.toString().toUpperCase();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (item[prop]) {\r\n                            propVal = item[prop].toString().toUpperCase();\r\n                        }                        \r\n                    }\r\n                    \r\n                    if (propVal.indexOf(filterData) > -1) {\r\n                        match = true;\r\n                        break;\r\n                    }\r\n                };\r\n                return match;\r\n            });\r\n            return filtered;\r\n        }\r\n        else {\r\n            return datasource;\r\n        }\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\n\r\n//Using the new HttpClientModule now. If you're still on < Angular 4.3 see the \r\n//data.service.ts file instead (simplify rename it to the name \r\n//of this file to use it instead)\r\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { ICustomer, IOrder, IState, IPagedResults, ICustomerResponse, IProject } from '../shared/interfaces';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  \r\n    baseUrl: string = '/api/customers';\r\n    baseProjectsUrl : string = '/api/projects';\r\n    baseStatesUrl: string = '/api/states'\r\n\r\n    constructor(private http: HttpClient) { \r\n\r\n    }\r\n    \r\n    getCustomers() : Observable<ICustomer[]> {\r\n        return this.http.get<ICustomer[]>(this.baseUrl)\r\n            .pipe(\r\n                   map((customers: ICustomer[]) => {\r\n                       this.calculateCustomersOrderTotal(customers);\r\n                       return customers;\r\n                   }),\r\n                   catchError(this.handleError)\r\n                );\r\n    }\r\n\r\n    getProjects() : Observable<IProject[]> {\r\n        return this.http.get<IProject[]>(this.baseUrl)\r\n            .pipe(\r\n                   map((projects: IProject[]) => {\r\n                       //this.calculateCustomersOrderTotal(projects);\r\n                       return projects;\r\n                   }),\r\n                   catchError(this.handleError)\r\n                );\r\n    }\r\n\r\n    getCustomersPage(page: number, pageSize: number) : Observable<IPagedResults<ICustomer[]>> {\r\n        return this.http.get<ICustomer[]>(`${this.baseUrl}/page/${page}/${pageSize}`, { observe: 'response' })\r\n            .pipe(\r\n                    map((res) => {\r\n                        //Need to observe response in order to get to this header (see {observe: 'response'} above)\r\n                        const totalRecords = +res.headers.get('x-inlinecount');\r\n                        let customers = res.body as ICustomer[];\r\n                        this.calculateCustomersOrderTotal(customers);\r\n                        return {\r\n                            results: customers,\r\n                            totalRecords: totalRecords\r\n                        };\r\n                    }),\r\n                    catchError(this.handleError)\r\n                );\r\n    }\r\n\r\n    getProjectsPage(page: number, pageSize: number) : Observable<IPagedResults<IProject[]>> {\r\n        return this.http.get<IProject[]>(`${this.baseProjectsUrl}/page/${page}/${pageSize}`, { observe: 'response' })\r\n            .pipe(\r\n                    map((res) => {\r\n                        //Need to observe response in order to get to this header (see {observe: 'response'} above)\r\n                        const totalRecords = +res.headers.get('x-inlinecount');\r\n                        let projects = res.body as IProject[];\r\n                        //this.calculateCustomersOrderTotal(projects);\r\n                        return {\r\n                            results: projects,\r\n                            totalRecords: totalRecords\r\n                        };\r\n                    }),\r\n                    catchError(this.handleError)\r\n                );\r\n    }\r\n    \r\n    getCustomer(id: string) : Observable<ICustomer> {\r\n        return this.http.get<ICustomer>(this.baseUrl + '/' + id)\r\n            .pipe(\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    insertCustomer(customer: ICustomer) : Observable<ICustomer> {\r\n        return this.http.post<ICustomerResponse>(this.baseUrl, customer)\r\n            .pipe(\r\n                   map((data) => {\r\n                       console.log('insertCustomer status: ' + data.status);\r\n                       return data.customer;\r\n                   }),\r\n                   catchError(this.handleError)\r\n                );\r\n    }\r\n   \r\n    updateCustomer(customer: ICustomer) : Observable<ICustomer> {\r\n        return this.http.put<ICustomerResponse>(this.baseUrl + '/' + customer._id, customer) \r\n            .pipe(\r\n                   map((data) => {\r\n                       console.log('updateCustomer status: ' + data.status);\r\n                       return data.customer;\r\n                   }),\r\n                   catchError(this.handleError)\r\n                );\r\n    }\r\n\r\n    deleteCustomer(id: string) : Observable<boolean> {\r\n        return this.http.delete<boolean>(this.baseUrl + '/' + id)\r\n            .pipe(\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n   \r\n    getStates(): Observable<IState[]> {\r\n        return this.http.get<IState[]>(this.baseStatesUrl)\r\n            .pipe(\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    calculateCustomersOrderTotal(customers: ICustomer[]) {\r\n        for (let customer of customers) {\r\n            if (customer && customer.orders) {\r\n                let total = 0;\r\n                for (let order of customer.orders) {\r\n                    total += (order.price * order.quantity);\r\n                }\r\n                customer.orderTotal = total;\r\n            }\r\n        }\r\n    }\r\n    \r\n    private handleError(error: HttpErrorResponse) {\r\n        console.error('server error:', error); \r\n        if (error.error instanceof Error) {\r\n          let errMessage = error.error.message;\r\n          return Observable.throw(errMessage);\r\n          // Use the following instead if using lite-server\r\n          //return Observable.throw(err.text() || 'backend server error');\r\n        }\r\n        return Observable.throw(error || 'Node.js server error');\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { propertyResolver } from '../shared/property-resolver';\r\n\r\n@Injectable()\r\nexport class Sorter {\r\n\r\n\tproperty: string = null;\r\n\tdirection: number = 1;\r\n\r\n    sort(collection: any[], prop: any) {\r\n        this.property = prop;\r\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\r\n\r\n        collection.sort((a: any,b: any) => {\r\n            let aVal: any;\r\n            let bVal: any;\r\n            \r\n            //Handle resolving complex properties such as 'state.name' for prop value\r\n            if (prop && prop.indexOf('.') > -1) {\r\n              aVal = propertyResolver.resolve(prop, a);\r\n              bVal = propertyResolver.resolve(prop, b);\r\n            }\r\n            else {            \r\n              aVal = a[prop];\r\n              bVal = b[prop];\r\n            }\r\n            \r\n            //Fix issues that spaces before/after string value can cause such as ' San Francisco'\r\n            if (this.isString(aVal)) aVal = aVal.trim().toUpperCase();\r\n            if (this.isString(bVal)) bVal = bVal.trim().toUpperCase();\r\n          \r\n            if(aVal === bVal){\r\n                return 0;\r\n            }\r\n            else if (aVal > bVal){\r\n                return this.direction * -1;\r\n            }\r\n            else {\r\n                return this.direction * 1;\r\n            }\r\n        });\r\n    }\r\n    \r\n    isString(val: any) : boolean {\r\n      return (val && (typeof val === 'string' || val instanceof String));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport { ICustomer } from '../shared/interfaces';\r\n\r\n@Injectable()\r\nexport class TrackByService {\r\n  \r\n  customer(index: number, customer: ICustomer) {\r\n    return customer._id;\r\n  }\r\n  \r\n}","module.exports = \"<div>\\r\\n  <header>\\r\\n      <h3>\\r\\n          <span class=\\\"glyphicon glyphicon-user\\\"></span>\\r\\n          {{ customer.firstName }} {{ customer.lastName }}\\r\\n      </h3>\\r\\n  </header>\\r\\n  <br />\\r\\n  <form [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"submit(customerForm)\\\" class=\\\"editForm\\\" novalidate>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>First Name</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" />\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.firstName.untouched || customerForm.controls.firstName.valid\\\">First Name is required</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Last Name</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\">\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.lastName.untouched || customerForm.controls.lastName.valid\\\">Last Name is required</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Gender</label>\\r\\n      <br />\\r\\n      <div class=\\\"radio\\\">\\r\\n        <label>\\r\\n          <input type=\\\"radio\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\" value=\\\"Male\\\" />\\r\\n          Male\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class=\\\"radio\\\">\\r\\n        <label>\\r\\n          <input type=\\\"radio\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\" value=\\\"Female\\\"  /> \\r\\n          Female\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Email</label>\\r\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.email.untouched || customerForm.controls.email.valid\\\">Email is required and must be valid</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Address</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.address.untouched || customerForm.controls.address.valid\\\">Address is required</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>City</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" />\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.city.untouched || customerForm.controls.city.valid\\\">City is required</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>State</label>\\r\\n      <select class=\\\"form-control\\\" formControlName=\\\"stateId\\\">\\r\\n          <option *ngFor=\\\"let state of states\\\" [ngValue]=\\\"state.id\\\">{{state.name}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <div *ngIf=\\\"customer\\\">\\r\\n      <div class=\\\"alert alert-warning\\\" *ngIf=\\\"customer._id && deleteMessageEnabled\\\">\\r\\n         Delete Customer?&nbsp;&nbsp;<button class=\\\"btn btn-danger\\\" (click)=\\\"delete($event)\\\">Yes</button>&nbsp;&nbsp;\\r\\n         <button class=\\\"btn btn-default\\\" (click)=\\\"deleteMessageEnabled = false\\\">No</button>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-danger\\\" *ngIf=\\\"customer._id && !deleteMessageEnabled\\\" (click)=\\\"deleteMessageEnabled = true\\\">Delete</button>&nbsp;&nbsp;\\r\\n\\r\\n      <div class=\\\"pull-right\\\" *ngIf=\\\"!deleteMessageEnabled\\\">\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button>&nbsp;&nbsp;\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!customerForm.valid\\\">{{ operationText }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage != null\\\">{{ errorMessage }}</div>\\r\\n\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { DataService } from '../core/data.service';\r\nimport { ICustomer, IState } from '../shared/interfaces';\r\nimport { ValidationService } from '../shared/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-edit-reactive',\r\n  templateUrl: './customer-edit-reactive.component.html'\r\n})\r\nexport class CustomerEditReactiveComponent implements OnInit {\r\n\r\n  customerForm: FormGroup;\r\n  customer: ICustomer = {\r\n    firstName: '',\r\n    lastName: '',\r\n    gender: '',\r\n    address: '',\r\n    email: '',\r\n    city: '',\r\n    zip: 0\r\n  };\r\n  states: IState[];\r\n  errorMessage: string;\r\n  deleteMessageEnabled: boolean;\r\n  operationText: string = 'Insert';\r\n  \r\n  constructor(private router: Router, \r\n              private route: ActivatedRoute, \r\n              private dataService: DataService,\r\n              private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    let id = this.route.snapshot.params['id'];\r\n    if (id !== '0') {\r\n      this.operationText = 'Update';\r\n      this.getCustomer(id);\r\n    }\r\n\r\n    this.getStates();\r\n    this.buildForm();\r\n  }\r\n\r\n  getCustomer(id: string) {\r\n      this.dataService.getCustomer(id)\r\n        .subscribe((customer: ICustomer) => {\r\n          this.customer = customer;\r\n          this.buildForm();\r\n        },\r\n        (err) => console.log(err));\r\n  }\r\n\r\n  buildForm() {\r\n      this.customerForm = this.formBuilder.group({\r\n        firstName:  [this.customer.firstName, Validators.required],\r\n        lastName:   [this.customer.lastName, Validators.required],\r\n        gender:     [this.customer.gender, Validators.required],\r\n        email:      [this.customer.email, [Validators.required, ValidationService.emailValidator]],\r\n        address:    [this.customer.address, Validators.required],\r\n        city:       [this.customer.city, Validators.required],\r\n        stateId:    [this.customer.stateId, Validators.required]\r\n      });\r\n  }\r\n\r\n  getStates() {\r\n    this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\r\n  }\r\n  \r\n  submit({ value, valid }: { value: ICustomer, valid: boolean }) {\r\n      \r\n      value._id = this.customer._id;\r\n      value.zip = this.customer.zip || 0; \r\n      // var customer: ICustomer = {\r\n      //   _id: this.customer._id,\r\n      // };\r\n\r\n      if (value._id) {\r\n\r\n        this.dataService.updateCustomer(value)\r\n          .subscribe((customer: ICustomer) => {\r\n            if (customer) {\r\n              this.router.navigate(['/customers']);\r\n            }\r\n            else {\r\n              this.errorMessage = 'Unable to save customer';\r\n            }\r\n          },\r\n          (err) => console.log(err));\r\n\r\n      } else {\r\n\r\n        this.dataService.insertCustomer(value)\r\n          .subscribe((customer: ICustomer) => {\r\n            if (customer) {\r\n              this.router.navigate(['/customers']);\r\n            }\r\n            else {\r\n              this.errorMessage = 'Unable to add customer';\r\n            }\r\n          },\r\n          (err) => console.log(err));\r\n          \r\n      }\r\n  }\r\n  \r\n  cancel(event: Event) {\r\n    event.preventDefault();\r\n    this.router.navigate(['/customers']);\r\n  }\r\n\r\n  delete(event: Event) {\r\n    event.preventDefault();\r\n    this.dataService.deleteCustomer(this.customer._id)\r\n        .subscribe((status: boolean) => {\r\n          if (status) {\r\n            this.router.navigate(['/customers']);\r\n          }\r\n          else {\r\n            this.errorMessage = 'Unable to delete customer';\r\n          }\r\n        },\r\n        (err) => console.log(err));\r\n  }\r\n\r\n}","module.exports = \"<div>\\r\\n  <header>\\r\\n      <h3>\\r\\n          <span class=\\\"glyphicon glyphicon-user\\\"></span>\\r\\n          {{ customer.firstName }} {{ customer.lastName }}\\r\\n      </h3>\\r\\n  </header>\\r\\n  <br />\\r\\n  <form (ngSubmit)=\\\"submit()\\\" #customerForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>First Name</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"customer.firstName\\\" #firstName=\\\"ngModel\\\" required>\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"firstName.untouched || firstName.valid\\\">First Name is required</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Last Name</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"customer.lastName\\\" #lastName=\\\"ngModel\\\" required>\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"lastName.untouched || lastName.valid\\\">Last Name is required</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Gender</label>\\r\\n      <br />\\r\\n      <div class=\\\"radio\\\">\\r\\n        <label>\\r\\n          <input type=\\\"radio\\\" name=\\\"gender\\\" [(ngModel)]=\\\"customer.gender\\\" #gender=\\\"ngModel\\\" value=\\\"Male\\\" required />\\r\\n          Male\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class=\\\"radio\\\">\\r\\n        <label>\\r\\n          <input type=\\\"radio\\\" name=\\\"gender\\\" [(ngModel)]=\\\"customer.gender\\\" #gender=\\\"ngModel\\\" value=\\\"Female\\\" required /> \\r\\n          Female\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Email</label>\\r\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"customer.email\\\" #email=\\\"ngModel\\\" required pattern=\\\"^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$\\\" />\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"email.untouched || email.valid\\\">Email is required and must be valid</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Address</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"customer.address\\\" #address=\\\"ngModel\\\" required>\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"address.untouched || address.valid\\\">Address is required</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>City</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"customer.city\\\" #city=\\\"ngModel\\\" required>\\r\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"city.untouched || city.valid\\\">City is required</div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>State</label>\\r\\n      <select class=\\\"form-control\\\" \\r\\n              [(ngModel)]=\\\"customer.stateId\\\"\\r\\n              name=\\\"state\\\" \\r\\n              required>\\r\\n          <option *ngFor=\\\"let state of states\\\" [ngValue]=\\\"state.id\\\">{{state.name}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <div *ngIf=\\\"customer\\\">\\r\\n      <div class=\\\"alert alert-warning\\\" *ngIf=\\\"customer._id && deleteMessageEnabled\\\">\\r\\n         Delete Customer?&nbsp;&nbsp;<button class=\\\"btn btn-danger\\\" (click)=\\\"delete($event)\\\">Yes</button>&nbsp;&nbsp;\\r\\n         <button class=\\\"btn btn-default\\\" (click)=\\\"deleteMessageEnabled = false\\\">No</button>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-danger\\\" *ngIf=\\\"customer._id && !deleteMessageEnabled\\\" (click)=\\\"deleteMessageEnabled = true\\\">Delete</button>&nbsp;&nbsp;\\r\\n\\r\\n      <div class=\\\"pull-right\\\" *ngIf=\\\"!deleteMessageEnabled\\\">\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button>&nbsp;&nbsp;\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!customerForm.valid\\\">{{ operationText }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage != null\\\">{{ errorMessage }}</div>\\r\\n\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { DataService } from '../core/data.service';\r\nimport { ICustomer, IState } from '../shared/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-customer-edit',\r\n  templateUrl: './customer-edit.component.html'\r\n})\r\nexport class CustomerEditComponent implements OnInit {\r\n\r\n  customer: ICustomer = {\r\n    firstName: '',\r\n    lastName: '',\r\n    gender: '',\r\n    address: '',\r\n    email: '',\r\n    city: '',\r\n    zip: 0\r\n  };\r\n  states: IState[];\r\n  errorMessage: string;\r\n  deleteMessageEnabled: boolean;\r\n  operationText: string = 'Insert';\r\n  \r\n  constructor(private router: Router, \r\n              private route: ActivatedRoute, \r\n              private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    let id = this.route.snapshot.params['id'];\r\n    if (id !== '0') {\r\n      this.operationText = 'Update';\r\n      this.getCustomer(id);\r\n    }\r\n\r\n    this.getStates();\r\n  }\r\n\r\n  getCustomer(id: string) {\r\n      this.dataService.getCustomer(id)\r\n        .subscribe((customer: ICustomer) => {\r\n          this.customer = customer;\r\n        },\r\n        (err: any) => console.log(err));\r\n  }\r\n\r\n  getStates() {\r\n    this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\r\n  }\r\n  \r\n  submit() {\r\n\r\n      if (this.customer._id) {\r\n\r\n        this.dataService.updateCustomer(this.customer)\r\n          .subscribe((customer: ICustomer) => {\r\n            if (customer) {\r\n              this.router.navigate(['/customers']);\r\n            } else {\r\n              this.errorMessage = 'Unable to save customer';\r\n            }\r\n          },\r\n          (err: any) => console.log(err));\r\n\r\n      } else {\r\n\r\n        this.dataService.insertCustomer(this.customer)\r\n          .subscribe((customer: ICustomer) => {\r\n            if (customer) {\r\n              this.router.navigate(['/customers']);\r\n            }\r\n            else {\r\n              this.errorMessage = 'Unable to add customer';\r\n            }\r\n          },\r\n          (err: any) => console.log(err));\r\n          \r\n      }\r\n  }\r\n  \r\n  cancel(event: Event) {\r\n    event.preventDefault();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  delete(event: Event) {\r\n    event.preventDefault();\r\n    this.dataService.deleteCustomer(this.customer._id)\r\n        .subscribe((status: boolean) => {\r\n          if (status) {\r\n            this.router.navigate(['/customers']);\r\n          }\r\n          else {\r\n            this.errorMessage = 'Unable to delete customer';\r\n          }\r\n        },\r\n        (err) => console.log(err));\r\n  }\r\n\r\n}","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row grid-container\\\">\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n            <div class=\\\"table\\\">\\r\\n                <table class=\\\"table table-striped table-hover\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>&nbsp;</th>\\r\\n                            <th (click)=\\\"sort('firstName')\\\">First Name</th>\\r\\n                            <th (click)=\\\"sort('lastName')\\\">Last Name</th>\\r\\n                            <th (click)=\\\"sort('address')\\\">Address</th>\\r\\n                            <th (click)=\\\"sort('city')\\\">City</th>\\r\\n                            <th (click)=\\\"sort('state.name')\\\">State</th>\\r\\n                            <th (click)=\\\"sort('orderTotal')\\\">Order Total</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let customer of customers;trackBy:trackby.customer\\\">\\r\\n                            <td><img src=\\\"/assets/images/{{ customer.gender | lowercase }}.png\\\"\\r\\n                                    class=\\\"card-image\\\" alt=\\\"Customer Image\\\" /></td>\\r\\n                            <td><a [routerLink]=\\\"['/customers',customer._id]\\\">{{ customer.firstName | capitalize }}</a></td>\\r\\n                            <td>{{ customer.lastName | capitalize }}</td>\\r\\n                            <td>{{ customer.address }}</td>\\r\\n                            <td>{{ customer.city | trim }}</td>\\r\\n                            <td>{{ customer.state.name }}</td>\\r\\n                            <td>{{ customer.orderTotal | currency:'USD':'symbol' }}</td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"!customers.length\\\">\\r\\n                            <td>&nbsp;</td>\\r\\n                            <td colspan=\\\"6\\\">No Records Found</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { ICustomer } from '../shared/interfaces';\r\nimport { Sorter } from '../core/sorter';\r\nimport { TrackByService } from '../core/trackby.service';\r\n\r\n@Component({ \r\n  selector: 'app-customers-grid', \r\n  templateUrl: './customers-grid.component.html',\r\n  //When using OnPush detectors, then the framework will check an OnPush \r\n  //component when any of its input properties changes, when it fires \r\n  //an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\r\n  changeDetection: ChangeDetectionStrategy.OnPush \r\n})\r\nexport class CustomersGridComponent implements OnInit {\r\n\r\n  @Input() customers: ICustomer[] = [];\r\n\r\n  constructor(private sorter: Sorter, public trackby: TrackByService) { }\r\n   \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  sort(prop: string) {\r\n      this.sorter.sort(this.customers, prop);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"customers view indent\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <header>\\r\\n            <h3>\\r\\n                <span class=\\\"glyphicon glyphicon-user\\\"></span>\\r\\n                {{ title }}\\r\\n            </h3>\\r\\n        </header>\\r\\n        <br />\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <div class=\\\"navbar\\\">\\r\\n                    <app-filter-textbox (changed)=\\\"filterChanged($event)\\\"></app-filter-textbox>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/customers', '0']\\\">Add New Customer</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    \\r\\n        <app-customers-grid [customers]=\\\"filteredCustomers\\\"></app-customers-grid>\\r\\n\\r\\n        <app-pagination [totalItems]=\\\"totalRecords\\\" \\r\\n            [pageSize]=\\\"pageSize\\\" \\r\\n            (pageChanged)=\\\"pageChanged($event)\\\"></app-pagination>\\r\\n          \\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { DataFilterService } from '../core/data-filter.service';\r\nimport { DataService } from '../core/data.service';\r\nimport { ICustomer, IOrder, IPagedResults } from '../shared/interfaces';\r\n\r\n@Component({ \r\n  selector: 'app-customers', \r\n  templateUrl: './customers.component.html'\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n\r\n  title: string;\r\n  customers: ICustomer[] = [];\r\n  filteredCustomers: ICustomer[] = [];\r\n\r\n  totalRecords: number = 0;\r\n  pageSize: number = 10;\r\n\r\n  constructor(private router: Router, \r\n              private dataService: DataService,\r\n              private dataFilter: DataFilterService) { }\r\n  \r\n  ngOnInit() {\r\n    this.title = 'Customers';\r\n    this.getCustomersPage(1);\r\n  }\r\n\r\n  filterChanged(filterText: string) {\r\n    if (filterText && this.customers) {\r\n        let props = ['firstName', 'lastName', 'address', 'city', 'state.name', 'orderTotal'];\r\n        this.filteredCustomers = this.dataFilter.filter(this.customers, props, filterText);\r\n    }\r\n    else {\r\n      this.filteredCustomers = this.customers;\r\n    }\r\n  }\r\n\r\n  pageChanged(page: number) {\r\n    this.getCustomersPage(page);\r\n  }\r\n\r\n  getCustomersPage(page: number) {\r\n    this.dataService.getCustomersPage((page - 1) * this.pageSize, this.pageSize)\r\n        .subscribe((response: IPagedResults<ICustomer[]>) => {\r\n          this.customers = this.filteredCustomers = response.results;\r\n          this.totalRecords = response.totalRecords;\r\n        },\r\n        (err: any) => console.log(err),\r\n        () => console.log('getCustomersPage() retrieved customers'));\r\n  }\r\n\r\n}","module.exports = \"\"","module.exports = \"<button mat-button>\\n  <mat-icon>face</mat-icon>\\n  Click me!\\n</button>\\n<mat-checkbox>Check me!</mat-checkbox>\\n\\n<mat-horizontal-stepper>\\n  <mat-step label=\\\"step1\\\">step1</mat-step>\\n  <mat-step label=\\\"step2\\\">step2</mat-step>\\n</mat-horizontal-stepper>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class EnsureModuleLoadedOnceGuard {\r\n\r\n  constructor(targetModule: any) {\r\n    if (targetModule) {\r\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\r\n    }\r\n  }\r\n\r\n}","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter-textbox',\r\n  template: `\r\n    <form>\r\n         Filter:\r\n         <input type=\"text\" name=\"filter\"\r\n                [(ngModel)]=\"model.filter\" \r\n                (keyup)=\"filterChanged($event)\"  />\r\n    </form>\r\n  `\r\n})\r\nexport class FilterTextboxComponent {\r\n\r\n  \r\n    model: { filter: string } = { filter: null };\r\n    \r\n    @Output()\r\n    changed: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    filterChanged(event: any) {\r\n      event.preventDefault();\r\n      this.changed.emit(this.model.filter); //Raise changed event\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCheckboxModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatCardModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatStepperModule\n} from '@angular/material';\n\nimport { CdkTableModule } from '@angular/cdk/table';\n\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    CdkTableModule\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    CdkTableModule\n  ]\n})\nexport class MaterialModule { }\n","module.exports = \".pagination>.active>a, .pagination>.active>a:focus, .pagination>.active>a:hover, .pagination>.active>span, .pagination>.active>span:focus, .pagination>.active>span:hover {\\r\\n  background-color: #027FF4;\\r\\n  border-color: #027FF4;\\r\\n}\\r\\n\\r\\n.pagination a {\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<nav [hidden]=\\\"!isVisible\\\">\\r\\n  <ul class=\\\"pagination\\\">\\r\\n    <li [class.disabled]=\\\"!previousEnabled\\\" (click)=\\\"previousNext(-1, $event)\\\">\\r\\n      <a aria-label=\\\"Previous\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n      </a>\\r\\n    </li>\\r\\n    <li *ngFor=\\\"let page of pages\\\" (click)=\\\"changePage(page, $event)\\\" [class.active]=\\\"currentPage === page\\\">\\r\\n      <a>{{ page }}</a>\\r\\n    </li>\\r\\n    <li [class.disabled]=\\\"!nextEnabled\\\" (click)=\\\"previousNext(1, $event)\\\">\\r\\n      <a aria-label=\\\"Next\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n      </a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</nav>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n   selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: [ './pagination.component.css' ]\r\n})\r\n\r\nexport class PaginationComponent implements OnInit {\r\n  \r\n  private pagerTotalItems: number;\r\n  private pagerPageSize: number;\r\n  \r\n  totalPages: number;\r\n  pages: number[] = [];\r\n  currentPage: number = 1;\r\n  isVisible: boolean = false;\r\n  previousEnabled: boolean = false;\r\n  nextEnabled: boolean = true;\r\n  \r\n  @Input() get pageSize():number {\r\n    return this.pagerPageSize;\r\n  }\r\n\r\n  set pageSize(size:number) {\r\n    this.pagerPageSize = size;\r\n    this.update();\r\n  }\r\n  \r\n  @Input() get totalItems():number {\r\n    return this.pagerTotalItems;\r\n  }\r\n\r\n  set totalItems(itemCount:number) {\r\n    this.pagerTotalItems = itemCount;\r\n    this.update();\r\n  }\r\n  \r\n  @Output() pageChanged: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { \r\n\r\n  }\r\n  \r\n  update() {\r\n    if (this.pagerTotalItems && this.pagerPageSize) {\r\n      this.totalPages = Math.ceil(this.pagerTotalItems/this.pageSize);\r\n      this.isVisible = true;\r\n      if (this.totalItems >= this.pageSize) {\r\n        for (let i = 1;i < this.totalPages + 1;i++) {\r\n          this.pages.push(i);\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    \r\n    this.isVisible = false;\r\n  }\r\n  \r\n  previousNext(direction: number, event?: MouseEvent) {\r\n    let page: number = this.currentPage;\r\n    if (direction == -1) {\r\n        if (page > 1) page--;\r\n    } else {\r\n        if (page < this.totalPages) page++;\r\n    }\r\n    this.changePage(page, event);\r\n  }\r\n  \r\n  changePage(page: number, event?: MouseEvent) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    if (this.currentPage === page) return;\r\n    this.currentPage = page;\r\n    this.previousEnabled = this.currentPage > 1;\r\n    this.nextEnabled = this.currentPage < this.totalPages;\r\n    this.pageChanged.emit(page);\r\n  }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'capitalize' })\r\nexport class CapitalizePipe implements PipeTransform {\r\n\r\n  transform(value: any) {\r\n\t  if (value) {\r\n      \treturn value.charAt(0).toUpperCase() + value.slice(1);\r\n\t  }\r\n\t  return value;\r\n  }\r\n\r\n}","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({name: 'trim'})\r\nexport class TrimPipe implements PipeTransform {\r\n  transform(value: any) {\r\n    if (!value) {\r\n      return '';\r\n    }\r\n    return value.trim();\r\n  }\r\n}","export class propertyResolver {\r\n     static resolve(path: string, obj: any) {\r\n      return path.split('.').reduce((prev, curr) => {\r\n          return (prev ? prev[curr] : undefined)\r\n      }, obj || self)\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { PaginationComponent } from './pagination/pagination.component';\r\nimport { CapitalizePipe } from './pipes/capitalize.pipe';\r\nimport { TrimPipe } from './pipes/trim.pipe';\r\nimport { FilterTextboxComponent } from './filter-textbox/filter-textbox.component';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule, FormsModule, ReactiveFormsModule ],\r\n  declarations: [CapitalizePipe, TrimPipe, FilterTextboxComponent, PaginationComponent ],\r\n  exports: [ CommonModule, FormsModule, ReactiveFormsModule, CapitalizePipe, TrimPipe, FilterTextboxComponent, PaginationComponent ]\r\n})\r\nexport class SharedModule { }\r\n","//Original version created by Cory Rylan: https://coryrylan.com/blog/angular-2-form-builder-and-validation-management\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\nexport class ValidationService {\r\n     \r\n    static getValidatorErrorMessage(code: string) {\r\n        let config = {\r\n            'required': 'Required',\r\n            'invalidCreditCard': 'Is invalid credit card number',\r\n            'invalidEmailAddress': 'Invalid email address',\r\n            'invalidPassword': 'Invalid password. Password must be at least 6 characters long, and contain a number.'\r\n        };\r\n        return config[code];\r\n    }\r\n\r\n    static creditCardValidator(control: AbstractControl) {\r\n        // Visa, MasterCard, American Express, Diners Club, Discover, JCB\r\n        if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidCreditCard': true };\r\n        }\r\n    }\r\n     \r\n    static emailValidator(control: AbstractControl) {\r\n        // RFC 2822 compliant regex\r\n        if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidEmailAddress': true };\r\n        }\r\n    }\r\n     \r\n    static passwordValidator(control: AbstractControl) {\r\n        // {6,100}           - Assert password is between 6 and 100 characters\r\n        // (?=.*[0-9])       - Assert a string has at least one number\r\n        if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPassword': true };\r\n        }\r\n    }\r\n}","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport \"hammerjs\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}